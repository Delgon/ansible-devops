# Service Account - To be set for the enterpriseadmin app deployment.
# This is needed for the enterpriseadmin app to access/edit K8s resource objects
# with the below Role permissions.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ arcgis_admin_service_account_name }}"
  namespace: "{{ mas_arcgis_namespace }}"
  labels:
    arcgis/siteName: "{{ arcgis_sitename }}"
---
# Role - Admin Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ arcgis_admin_role }}"
  namespace: "{{ mas_arcgis_namespace }}"
  labels:
    arcgis/siteName: "{{ arcgis_sitename }}"
rules:

  # secrets
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write

  # configmaps
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write

  # leases
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write

  # services
  - apiGroups: [ "" ]
    resources: [ "services" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write
  - apiGroups: [ "" ]
    resources: [ "services/status" ]
    verbs: [ "get", "list", "watch" ] # read only

  # pods
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write, but we dont manage it, except for delete when cleanup
  - apiGroups: [ "" ]
    resources: [ "pods/status" ]
    verbs: [ "get", "list", "watch" ] # read only
  - apiGroups: [ "" ]
    resources: [ "pods/log" ]
    verbs: [ "get", "list", "watch" ] # read only, not used now, will be helpful in understanding failures later

  # persistentvolumeclaims
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims/status" ]
    verbs: [ "get", "list", "watch" ] # read only

  # deployments
  - apiGroups: [ "apps" ]
    resources: [ "deployments" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write
  - apiGroups: [ "apps" ]
    resources: [ "deployments/status" ]
    verbs: [ "get", "list", "watch" ] # read only
  - apiGroups: [ "apps" ]
    resources: [ "deployments/scale" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write, not used now
  - apiGroups: [ "apps" ]
    resources: [ "deployments/rollback" ]
    verbs: [ "create", "delete", "deletecollection", "patch", "update" ] # write only, not used now

  # replicasets
  - apiGroups: [ "apps" ]
    resources: [ "replicasets" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write, not used much
  - apiGroups: [ "apps" ]
    resources: [ "replicasets/status" ]
    verbs: [ "get", "list", "watch" ] # read only, not used now
  - apiGroups: [ "apps" ]
    resources: [ "replicasets/scale" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write, not used now

  # statefulsets
  - apiGroups: [ "apps" ]
    resources: [ "statefulsets" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write
  - apiGroups: [ "apps" ]
    resources: [ "statefulsets/status" ]
    verbs: [ "get", "list", "watch" ] # read only
  - apiGroups: [ "apps" ]
    resources: [ "statefulsets/scale" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write, not used now

  # ingress
  - apiGroups: [ "networking.k8s.io" ]
    resources: [ "ingresses" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write
  - apiGroups: [ "networking.k8s.io" ]
    resources: [ "ingresses/status" ]
    verbs: [ "get", "list", "watch" ] # read only

  # jobs
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write
  - apiGroups: [ "batch" ]
    resources: [ "jobs/status" ]
    verbs: [ "get", "list", "watch" ] # read only

  # horizontalpodautoscalers
  - apiGroups: [ "autoscaling" ]
    resources: [ "horizontalpodautoscalers" ]
    verbs: [ "get", "list", "watch", "create", "delete", "deletecollection", "patch", "update" ] # read write, not used now
  - apiGroups: [ "autoscaling" ]
    resources: [ "horizontalpodautoscalers/status" ]
    verbs: [ "get", "list", "watch" ] # read only, not used now

  # events
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "get", "list", "watch" ] # read only

  # resourcequotas
  - apiGroups: [ "" ]
    resources: [ "resourcequotas" ]
    verbs: [ "get", "list", "watch" ] # read only, not used now, will be helpful in understanding failures later
  - apiGroups: [ "" ]
    resources: [ "resourcequotas/status" ]
    verbs: [ "get", "list", "watch" ] # read only, not used now, will be helpful in understanding failures later

---
# Role Binding - Binding Service Account and Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ arcgis_admin_role_binding }}"
  namespace: "{{ mas_arcgis_namespace }}"
  labels:
    arcgis/siteName: "{{ arcgis_sitename }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ arcgis_admin_role }}"
subjects:
  - kind: ServiceAccount
    name: "{{ arcgis_admin_service_account_name }}"
    namespace: "{{ mas_arcgis_namespace }}"
