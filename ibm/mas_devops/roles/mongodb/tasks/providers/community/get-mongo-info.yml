---
# Get mongodb version and status
# -----------------------------------------------------------------------------
- name: "Get MongoDBCommunity"
  kubernetes.core.k8s_info:
    api_version: mongodbcommunity.mongodb.com/v1
    kind: MongoDBCommunity
    name: mas-mongo-ce
    namespace: "{{ mongodb_namespace }}"
  register: _mongodbcommunity_output

- name: "Set fact: mongodb version"
  set_fact:
    mongodb_version: "{{ _mongodbcommunity_output.resources[0].spec.version }}"
  when:
    - _mongodbcommunity_output is defined
    - _mongodbcommunity_output.resources[0] is defined
    - _mongodbcommunity_output.resources[0].spec.version is defined

- name: "Fail if mongodb does not exists"
  assert:
    that: mongodb_version is defined
    fail_msg: "Mongodb does not exists!"

- name: "Set fact: mongodb running status"
  set_fact:
    mongodb_running: true
  when:
    - _mongodbcommunity_output is defined
    - _mongodbcommunity_output.resources[0] is defined
    - _mongodbcommunity_output.resources[0].status is defined
    - _mongodbcommunity_output.resources[0].status.phase is defined
    - _mongodbcommunity_output.resources[0].status.phase == "Running"

- name: "Fail if mongodb is not running"
  assert:
    that: mongodb_running is defined and mongodb_running
    fail_msg: "Mongodb is not running!"


# Set mongodb pod variables
# -----------------------------------------------------------------------------
- name: "Set fact: mongodb pod variables"
  set_fact:
    mongodb_pod_name: mas-mongo-ce-0
    mongodb_container_name: mongod

- name: "Set fact: exec command in mongodb pod"
  set_fact:
    exec_in_pod_begin: >-
      oc exec {{ mongodb_pod_name }} -c {{ mongodb_container_name }} -n {{ mongodb_namespace }} -- bash -c '
    exec_in_pod_end: "'"

- name: "Set fact: copy file variables"
  set_fact:
    masbr_cf_namespace: "{{ mongodb_namespace }}"
    masbr_cf_pod_name: "{{ mongodb_pod_name }}"
    masbr_cf_container_name: "{{ mongodb_container_name }}"
    masbr_cf_pvc_name: "data-volume-{{ mongodb_pod_name }}"
    masbr_cf_pvc_mount_path: "/data"


# Get mongodb admin password
# -----------------------------------------------------------------------------
- name: "Get mongodb admin password"
  kubernetes.core.k8s_info:
    kind: Secret
    name: mas-mongo-ce-admin-password
    namespace: "{{ mongodb_namespace }}"
  register: _mongodb_password_output

- name: "Set fact: mongodb admin password"
  set_fact:
    mongodb_password: "{{ _mongodb_password_output.resources[0].data.password | b64decode }}"
  when:
    - _mongodb_password_output is defined
    - _mongodb_password_output.resources[0] is defined
    - _mongodb_password_output.resources[0].data.password is defined


# Get mongodb ca file location
# -----------------------------------------------------------------------------
- name: "Get mongodb ca file"
  changed_when: false
  shell: >
    {{ exec_in_pod_begin }}
    ls /var/lib/tls/ca/*.pem | head -n 1
    {{ exec_in_pod_end }}
  register: _mongodb_ca_file_output

- name: "Set fact: mongodb ca file"
  set_fact:
    mongodb_ca_file: "{{ _mongodb_ca_file_output.stdout }}"
  when:
    - _mongodb_ca_file_output.rc == 0
    - '"No such file or directory" not in _mongodb_ca_file_output.stdout'


# Get mongodb primary host
# -----------------------------------------------------------------------------
- name: "Get mongodb server information"
  changed_when: false
  shell: >
    {{ exec_in_pod_begin }}
    mongo --quiet --host={{ mongodb_pod_name }}.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017
    --username=admin --password={{ mongodb_password }} --authenticationDatabase=admin
    --tls --tlsCAFile={{ mongodb_ca_file }} admin
    --eval="print(JSON.stringify(db.runCommand({hello:1})))"
    {{ exec_in_pod_end }}
  register: _mongodb_info_output

- name: "Set fact: mongodb primary host"
  set_fact:
    mongodb_primary_host: "{{ _mongodb_info_output.stdout_lines[-1] | from_json | json_query('primary') }}"


# Output mongodb information
# -----------------------------------------------------------------------------
- name: "Debug: mongodb information"
  debug:
    msg:
      - "MongoDB version ............................ {{ mongodb_version }}"
      - "MongoDB is running ......................... {{ mongodb_running }}"
      - "MongoDB pod name ........................... {{ mongodb_pod_name }}"
      - "MongoDB primary host ....................... {{ mongodb_primary_host }}"
      - "MongoDB ca file ............................ {{ mongodb_ca_file }}"
