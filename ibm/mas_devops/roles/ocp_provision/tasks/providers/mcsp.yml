- name: "mcsp : Fail if required vars are not provided"
  assert:
    that:
      - cluster_name is defined
      - cluster_name != ""
      - ocp_version is defined
      - ocp_version != ""
      - mcsp_env is defined
      - mcsp_env is in ["build", "test", "preprod", "prod"]
      - mcsp_control_plane_api is defined
      - mcsp_control_plane_api != ""
      - mcsp_control_plane_token is defined
      - mcsp_control_plane_token != ""
      - mcsp_region is defined
      - mcsp_region != ""
      - mcsp_platform is defined
      - mcsp_platform is in ["aws"]
      - mcsp_platform_account_secret_name is defined
      - mcsp_platform_account_secret_name != ""
      - mcsp_control_plane_namespace is defined
      - mcsp_control_plane_namespace != ""
      - mcsp_worker_count is defined
      - mcsp_worker_count != ""
      - mcsp_worker_flavor is defined
      - mcsp_worker_flavor != ""
      - mcsp_dryrun is defined
      - mcsp_dryrun is in [true, false]

      # Required addons, all parameters must be configured
      - mcsp_argocd_api is defined
      - mcsp_argocd_api != ""
      - mcsp_argocd_secret_name is defined
      - mcsp_argocd_secret_name != ""
      - mcsp_argocd_project_name is defined
      - mcsp_argocd_project_name != ""

      - mcsp_idpverify_enabled is defined
      - mcsp_idpverify_enabled is in [true, false]
      - mcsp_idpverify_secret_verify_name is defined
      - mcsp_idpverify_secret_verify_name != ""

      - mcsp_security_enabled is defined
      - mcsp_security_enabled is in [true, false]
      - mcsp_logforwarder_enabled is defined
      - mcsp_logforwarder_enabled is in [true, false]
      - mcsp_logforwarder_secret_dlc_name is defined
      - mcsp_logforwarder_secret_dlc_name != ""
      - mcsp_logforwarder_secret_sf_name is defined
      - mcsp_logforwarder_secret_sf_name != ""
      
      # Optional addons, parameters only need to be configured if the addon is enabled
      - mcsp_kubeturbo_enabled is defined
      - mcsp_kubeturbo_enabled is in [true, false]
      - not mcsp_kubeturbo_enabled or (mcsp_kubeturbo_turbo_server is defined and mcsp_kubeturbo_turbo_server != "")
      - not mcsp_kubeturbo_enabled or (mcsp_kubeturbo_turbo_version is defined and mcsp_kubeturbo_turbo_version != "")
      - not mcsp_kubeturbo_enabled or (mcsp_kubeturbo_secret_kubeturbo_name is defined and mcsp_kubeturbo_secret_kubeturbo_name != "")

      - mcsp_imagepullsecret_enabled is defined
      - mcsp_imagepullsecret_enabled is in [true, false]

- name: "mcsp : Set derived facts"
  set_fact:
    mcsp_cluster_name: "{{ mcsp_control_plane_namespace }}-{{ cluster_name }}"
    mcsp_cluster_vpc_name: "{{ mcsp_control_plane_namespace }}-{{ cluster_name }}-vpc"

    # Concatenate a list of all secrets we require in the mas namespace
    # This list will vary depending on which addons are enabled
    # The list will be looped over by the check_secret.yml task
    required_secret_names: "{{ 
        [
          mcsp_platform_account_secret_name,
          mcsp_argocd_secret_name
        ]
        + (mcsp_idpverify_enabled | ternary([mcsp_idpverify_secret_verify_name], []))
        + (mcsp_logforwarder_enabled | ternary([mcsp_logforwarder_secret_dlc_name, mcsp_logforwarder_secret_sf_name], []))
        + (mcsp_kubeturbo_enabled | ternary([mcsp_kubeturbo_secret_kubeturbo_name], []))
        + (mcsp_imagepullsecret_enabled | ternary(mcsp_imagepullsecret_secret_names, []))
      }}"


- name: "mcsp : Debug information"
  debug:
    msg:
      - "Cluster name ........................... {{ cluster_name }}"
      - "OCP version ............................ {{ ocp_version }}"
      - "Qualified cluster name ................. {{ mcsp_cluster_name }}"
      - "VPC name ............................... {{ mcsp_cluster_vpc_name }}"
      - ""
      - "Platform ............................... {{ mcsp_platform }}"
      - "Region ................................. {{ mcsp_region }}"
      - "MCSP Environment ....................... {{ mcsp_env }}"
      - "Control Plane API ...................... {{ mcsp_control_plane_api }}"
      - "Control Plane namespace ................ {{ mcsp_control_plane_namespace }}"
      - "Platform account secret name ........... {{ mcsp_platform_account_secret_name }}"
      - "Dry run? ............................... {{ mcsp_dryrun }}"
      - ""
      - "Worker Count ........................... {{ mcsp_worker_count }}"
      - "Worker Flavor .......................... {{ mcsp_worker_flavor }}"
      - ""
      - "ArgoCD API ............................. {{ mcsp_argocd_api }}"
      - "ArgoCD secret name...................... {{ mcsp_argocd_secret_name }}"
      - "ArgoCD project name..................... {{ mcsp_argocd_project_name }}"
      - ""
      - "idpverify addon enabled? ............... {{ mcsp_idpverify_enabled }}"
      - "clusteradmin groups .................... {{ mcsp_idpverify_groups_clusteradmin }}"
      - "viewer groups .......................... {{ mcsp_idpverify_groups_viewer }}"
      - "verify secret name ..................... {{ mcsp_idpverify_secret_verify_name }}"
      - ""
      - "security addon enabled? ................ {{ mcsp_security_enabled }}"
      - ""
      - "logforwarder addon enabled? ............ {{ mcsp_logforwarder_enabled }}"
      - "dlc-cert secret name ................... {{ mcsp_logforwarder_secret_dlc_name }}"
      - "syslog-forwarder secret name ........... {{ mcsp_logforwarder_secret_sf_name }}"
      - ""
      - "kubeturbo addon enabled? ............... {{ mcsp_kubeturbo_enabled }}"
      - "kubeturbo turbo server ...,............. {{ mcsp_kubeturbo_turbo_server }}"
      - "kubeturbo turbo version ................ {{ mcsp_kubeturbo_turbo_version }}"
      - "kubeturbo secret name .................. {{ mcsp_kubeturbo_secret_kubeturbo_name }}"
      - ""
      - "imagepullsecret addon enabled? ......... {{ mcsp_imagepullsecret_enabled }}"
      - "imagepullsecret secret names ........... {{ mcsp_imagepullsecret_secret_names }}"
      - ""
      - "names of all required secrets .......... {{ required_secret_names }}"


- name: "mcsp : Debug CloudRockCluster CR"
  debug:
    msg: "{{ lookup('ansible.builtin.template', 'templates/mcsp/cloudrockcluster.yaml.j2') | from_yaml}}"


- name: "mcsp : Login to MCSP Control Plane"
  shell: >
    oc login --token={{ mcsp_control_plane_token }} --server={{ mcsp_control_plane_api }}

- name: "mcsp : Check required secrets are present"
  ansible.builtin.include_tasks: "{{ role_path }}/../../common_tasks/check_secret.yml"
  vars:
    secret_name: "{{ item }}"
    namespace: "{{ mcsp_control_plane_namespace }}"
  loop:
    "{{ required_secret_names }}"

# NOTE: field_selectors like below not supported
#     field_selectors:
#       - spec.sos.issos = true
#       - location = {{ mcsp_region }}
# Instead, we have to get all VPCs and loop through them to look for a matching SoS VPC

- name: "mcsp : Lookup VPCs in order verify that SoS VPC is present and correct for {{ mcsp_region }}"
  kubernetes.core.k8s_info:
    api_version: automation.ibm.com/v1alpha1
    kind: CloudRockVpc
    namespace: "{{ mcsp_control_plane_namespace }}"
  register: _vpcs

- name: "mcsp : Look for VPC with spec.sos.issos=true and spec.location={{ mcsp_region }}"
  set_fact:
    sos_vpc_name: "{{
        _vpcs.resources
        | selectattr('spec.sos.issos', 'defined')
        | selectattr('spec.sos.issos', 'equalto', true)
        | selectattr('spec.location', 'defined')
        | selectattr('spec.location', 'equalto', mcsp_region)
        | map(attribute='metadata.name')
        | first
        | default('')
      }}"

- name: "mcsp : Fail if SoS VPC is absent"
  assert:
    that:
      - sos_vpc_name is defined
      - sos_vpc_name != ""

- name: "mcsp : Verify that {{ sos_vpc_name }} is ready"
  kubernetes.core.k8s_info:
    api_version: automation.ibm.com/v1alpha1
    kind: CloudRockVpc
    namespace: "{{ mcsp_control_plane_namespace }}"
    name: "{{ sos_vpc_name }}"
    wait: yes
    wait_condition:
      type: Ready
      status: 'True'
    wait_timeout: 5

- name: "mcsp : Ensure CloudRockCluster CR is present"
  kubernetes.core.k8s:
    state: present
    template: 'templates/mcsp/cloudrockcluster.yaml.j2'

    # In case this is an update, wait for the controller to acknowledge the update
    wait: yes
    wait_sleep: 5
    wait_timeout: 60
    wait_condition:
      type: Ready
      status: 'False'
      reason: 'ForceReconcile'
  when:
    - not mcsp_dryrun

# Now wait for the status to transition to (or back to, in case of an update) Ready=True
- name: "mcsp : Wait for CloudRockCluster CR to be ready"
  kubernetes.core.k8s_info:
    api_version: automation.ibm.com/v1alpha1
    kind: CloudRockCluster
    namespace: "{{ mcsp_control_plane_namespace }}"
    name: "{{ mcsp_cluster_name }}"
    wait: yes
    wait_sleep: 60
    wait_timeout: 3600 # can take up to 60 minutes
    wait_condition:
      type: Ready
      status: 'True'
  ignore_errors: true
  when:
    - not mcsp_dryrun
