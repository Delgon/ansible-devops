---
- name: "detectimagepullbackoff : Check for watsonDiscoveryStatus 'Completed'"
  kubernetes.core.k8s_info:
    api_version: "discovery.watson.ibm.com/v1"
    kind: "WatsonDiscovery"
    name: "wd"
    namespace: "{{ cpd_instance_namespace }}"
  register: cpd_cr_wait_lookup

- name: "detectimagepullbackoff : Pause for 5 minutes to allow pods that may have started before we patched the StatefulSets to get into ImgPullBackOff"
  when:
    - cpd_cr_wait_lookup.resources is defined
    - cpd_cr_wait_lookup.resources | length == 1
    - cpd_cr_wait_lookup.resources[0].status is defined
    - cpd_cr_wait_lookup.resources[0].status.watsonDiscoveryStatus is defined
    - cpd_cr_wait_lookup.resources[0].status.watsonDiscoveryStatus != "Completed"
  pause:
    minutes: 5

# this will catch all cases where pods are in bad state ["Init:ImagePullBackOff", "ImagePullBackOff", "ErrImagePull"]
- name: "detectimagepullbackoff: Lookup bad state pods in {{ cpd_instance_namespace }} namespace"
  shell: "oc get pods -n {{ cpd_instance_namespace }} | grep ImagePull | awk '{print $1}'"
  when:
    - cpd_cr_wait_lookup.resources is defined
    - cpd_cr_wait_lookup.resources | length == 1
    - cpd_cr_wait_lookup.resources[0].status is defined
    - cpd_cr_wait_lookup.resources[0].status.watsonDiscoveryStatus is defined
    - cpd_cr_wait_lookup.resources[0].status.watsonDiscoveryStatus != "Completed"
  register: discovery_pod_lookup

- name: "detectimagepullbackoff: Debug bad state pods in {{ cpd_instance_namespace }}"
  debug:
    msg:
      - "{{ discovery_pod_lookup.stdout_lines | default('All pods are healthy in {{ cpd_instance_namespace }} namespace', true )}}"

- name: "detectimagepullbackoff : Delete pod if its state in ImagePullBackoff"
  when:
    - discovery_pod_lookup.stdout_lines is defined
    - discovery_pod_lookup.stdout_lines | length > 0
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Pod
    name: "{{ bad_state_pod_items }}"
    namespace: "{{ cpd_instance_namespace }}"
  loop: "{{ discovery_pod_lookup.stdout_lines }}"
  loop_control:
    loop_var: bad_state_pod_items
    label: "{{ bad_state_pod_items }}"

# - name: "detectimagepullbackoff : Delete pod if 'initContainerStatuses' is in ImagePullBackoff"
#   when:
#     - discovery_pod_lookup is defined
#     - discovery_pod_lookup | length > 0
#     - containers_init_item.status.initContainerStatuses[0].state is defined
#     - containers_init_item.status.initContainerStatuses[0].state.waiting is defined
#     - containers_init_item.status.initContainerStatuses[0].state.waiting.reason is defined
#     - containers_init_item.status.initContainerStatuses[0].state.waiting.reason is in ["ImagePullBackOff", "ErrImagePull"]
#   kubernetes.core.k8s:
#     state: absent
#     api_version: v1
#     kind: Pod
#     name: "{{ containers_init_item.metadata.name }}"
#     namespace: "{{ cpd_instance_namespace }}"
#   loop: "{{ discovery_pod_lookup.resources }}"
#   loop_control:
#     loop_var: containers_init_item
#     label: "{{ containers_init_item.metadata.name }}"
