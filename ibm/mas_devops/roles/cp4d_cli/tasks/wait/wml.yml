---
# During WML upgrade from 4.6.x to 4.8.x it was noticed that the StatefulSet named wml-cpd-etcd has the following issue:

# ==========================================================================================================================================================================
# Failed to replace object:
# b'{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"StatefulSet.apps
# \\"wml-cpd-etcd\\" is invalid: spec: Forbidden: updates to statefulset
# spec for fields other than \'replicas\', \'template\',
# \'updateStrategy\', \'persistentVolumeClaimRetentionPolicy\' and
# \'minReadySeconds\' are
# forbidden","reason":"Invalid","details":{"name":"wml-cpd-etcd","group":"apps","kind":"StatefulSet","causes":[{"reason":"FieldValueForbidden","message":"Forbidden:
# updates to statefulset spec for fields other than \'replicas\',
# \'template\', \'updateStrategy\',
# \'persistentVolumeClaimRetentionPolicy\' and \'minReadySeconds\' are
# forbidden","field":"spec"}]},"code":422}\n'

# The playbook has failed. See earlier output for exact error
# ==========================================================================================================================================================================
# In order to bypass this problem, we'll delete the refered statefulset and leave it up for the wml operator to recreate it properly during the upgrade process.
#
# It's really messy, but it's the only way to get this service upgraded without
# any manual intervention

# 1. Wait for wmlbase custom resource to be created
# -----------------------------------------------------------------------------
- name: "wait/wml : Wait for the WmLBase custom resource to appear (60s delay)"
  kubernetes.core.k8s_info:
    api_version: wml.cpd.ibm.com/v1beta1
    kind: WmlBase
    name: wml-cr
    namespace: "{{ cpd_instance_namespace }}"
  register: wml_cr_lookup
  retries: 30 # Up to 10 minutes
  delay: 60 # Every 1 minute
  until:
    - wml_cr_lookup.resources is defined
    - wml_cr_lookup.resources | length > 0

# 2. Lookup for wml-cpd-etcd stateful to be created
# -----------------------------------------------------------------------------
- name: "wait/wml : Wait for the wml-cpd-etcd statefulset to appear (60s delay)"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: StatefulSet
    name: wml-cpd-etcd
    namespace: "{{ cpd_instance_namespace }}"
  register: wml_cpd_etcd_lookup

# 3. Delete wml-cpd-etcd stateful if present so the wml operator
# can recreate it properly during upgrade
# -----------------------------------------------------------------------------
- block:
    # Scale down wml operator to force reconcile
    - name: "wait/wml : Scale down ibm-cpd-wml-operator"
      kubernetes.core.k8s:
        api_version: apps/v1
        name: ibm-cpd-wml-operator
        namespace: "{{ cpd_operators_namespace }}"
        kind: Deployment
        definition:
          spec:
            replicas: 0
        apply: true

    # Delete wml-cpd-etcd statefulset so next time it recreates with proper upgrade specs
    - name: "wait/wml : Delete wml-cpd-etcd statefulset so next time it recreates with proper upgrade specs"
      kubernetes.core.k8s:
        state: absent
        api_version: apps/v1
        kind: StatefulSet
        name: wml-cpd-etcd
        namespace: "{{ cpd_instance_namespace }}"

    # Scale up ibm-cpd-wml-operator again to force reconcile
    - name: "wait/wml : Scale up ibm-cpd-wml-operator to force reconcile"
      kubernetes.core.k8s:
        api_version: apps/v1
        name: ibm-cpd-wml-operator
        namespace: "{{ cpd_operators_namespace }}"
        kind: Deployment
        definition:
          spec:
            replicas: 1
        apply: true

    # Wait for ibm-cpd-wml-operator to be ready
    - name: "wait/ccs : Wait for ibm-cpd-wml-operator to be ready again (60s delay)"
      kubernetes.core.k8s_info:
        api_version: apps/v1
        name: ibm-cpd-wml-operator
        namespace: "{{ cpd_operators_namespace }}"
        kind: Deployment
      register: wml_operator_lookup
      until: wml_operator_lookup.resources[0].status.availableReplicas is defined
      retries: 20 # Approximately 20 minutes before we give up
      delay: 60 # 1 minute
  when:
    - wml_cpd_etcd_lookup.resources is defined
    - wml_cpd_etcd_lookup.resources | length > 0

- debug:
    msg:
      - "wml-cpd-etcd statefulset not present in {{ cpd_instance_namespace }}, thus wml upgrade will redeploy it"
  when:
    - wml_cpd_etcd_lookup.resources is not defined or wml_cpd_etcd_lookup.resources | length == 0
   
# # 4. Wait for WMLBase CR to be ready
# # -----------------------------------------------------------------------------
# # Note: We can't fail early when we see Failed status, as the operator will
# # report failed multiple times during initial reconcile.
# - name: "wait-wml : Wait for wmlStatus 'Completed' (5m interval)"
#   kubernetes.core.k8s_info:
#     api_version: wml.cpd.ibm.com/v1beta1
#     kind: WmLBase
#     name: wml-cr
#     namespace: "{{ cpd_instance_namespace }}"
#   register: wmlbase_cr_lookup
#   until:
#     - wmlbase_cr_lookup.resources is defined
#     - wmlbase_cr_lookup.resources | length == 1
#     - wmlbase_cr_lookup.resources[0].status is defined
#     - wmlbase_cr_lookup.resources[0].status.ccsStatus is defined
#     - wmlbase_cr_lookup.resources[0].status.ccsStatus == "Completed" #  or ccs_cr_lookup.resources[0].status.wmlStatus == "Failed"
#   retries: 50 # Just over 4 hours
#   delay: 300 # Every 5 minutes

# - name: "wait-wml : Check that the WMLBase wmlStatus is 'Completed'"
#   assert:
#     that: wmlStatus.resources[0].status.wmlStatus == "Completed"
#     fail_msg: "WMLBase install failed (wmlStatus)"
