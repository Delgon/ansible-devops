---
# Deployment - for bringing up enterpriseadmin app pods.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ arcgis_admin_deployment_name }}"
  namespace: "{{ arcgis_namespace }}"
  labels:
    arcgis/app: rest-administrator-api
    arcgis/siteName: "{{ arcgis_sitename }}"
    arcgis/instanceName: "{{ arcgis_selector_instance_name }}"
spec:
  replicas: 1 # Dont increase this for Alpha, can cause issue in pod affinity logic for portal-template pod
  selector:
    matchLabels:
      arcgis/app: rest-administrator-api
      arcgis/siteName: "{{ arcgis_sitename }}"
      arcgis/instanceName: "{{ arcgis_selector_instance_name }}"
  template:
    metadata:
      labels:
        arcgis/app: rest-administrator-api
        arcgis/siteName: "{{ arcgis_sitename }}"
        arcgis/instanceName: "{{ arcgis_selector_instance_name }}"
        arcgis/restartTimestamp: "000"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    arcgis/app: rest-administrator-api
                    arcgis/siteName: "{{ arcgis_sitename }}"
                    arcgis/instanceName: "{{ arcgis_selector_instance_name }}"
                topologyKey: "{{ arcgis_k8s_availability_topology_key }}"
      # Below serviceAccountName setting is important, this
      # gives the enterpriseadmin app, the account privileges
      # to access/edit K8s resources.
      serviceAccountName: "{{ arcgis_admin_service_account_name }}"
      # User running container also needs to run with arcgis group id
      securityContext:
        supplementalGroups: [{{ arcgis_supplemental_group_id }}]
      containers:
      - name: filebeat
        image: "{{ arcgis_container_image_filebeat }}"
        imagePullPolicy: "{{ arcgis_container_image_pull_policy }}"
        resources:
          requests:
            cpu: {{ resource_cpu_min_filebeat }}
            memory: "{{ resource_memory_min_filebeat }}"
          limits:
             cpu: {{ resource_cpu_max_filebeat }}
             memory: "{{ resource_memory_max_filebeat }}"
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          valueFrom:
            secretKeyRef:
              key: ELASTICSEARCH_SERVICE_NAME
              name: "{{ arcgis_spatiotemporal_index_store_info_secret_name }}"
        - name: HTTP_SCHEME
          valueFrom:
            secretKeyRef:
              key: HTTP_SCHEME
              name: "{{ arcgis_spatiotemporal_index_store_info_secret_name }}"
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName        
        lifecycle:
          preStop:
            exec:
              command: [
                  "sh", "-c",
                  "sleep 15",
              ]
        volumeMounts:
        - mountPath: /arcgisusr
          name: arcgisusr
          readOnly: true
        - name: logshipper-boot-env
          mountPath: /arcgis/framework/etc/logshipper-boot-env
      - image: "{{ arcgis_container_image_admin_api }}"
        imagePullPolicy: "{{ arcgis_container_image_pull_policy }}"
        name: main-container
        livenessProbe:
          httpGet:
            path: /admin
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 0
          periodSeconds: {{ liveness_period_seconds }}
          failureThreshold: 10
          timeoutSeconds: 30
        startupProbe:
          httpGet:
            path: /admin
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: {{ startup_init_delay_seconds }}
          failureThreshold: {{ startup_failure_threshold_count }}
          periodSeconds: {{ startup_period_seconds | int }}
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /admin
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 0
          periodSeconds:  {{ readiness_period_seconds }}
          failureThreshold: 10
          timeoutSeconds: 30
        resources:
          requests:
            cpu: {{ resource_cpu_min_admin }}
            memory: "{{ resource_memory_min_admin }}"
          limits:
            cpu: {{ resource_cpu_max_admin }}
            memory: "{{ resource_memory_max_admin }}"
        env:
            - name: ELASTICSEARCH_SERVICE_NAME
              valueFrom:
                secretKeyRef:
                  key: ELASTICSEARCH_SERVICE_NAME
                  name: "{{ arcgis_spatiotemporal_index_store_info_secret_name }}"
            # K8s specific environment variables available to the pod
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ARCGIS_LOG_DIR
              valueFrom:
                configMapKeyRef:
                  name: "{{ arcgis_log_settings_config_map }}"
                  key: arcgis_log_dir
            - name: ARCGIS_LOG_SETTINGS
              valueFrom:
                configMapKeyRef:
                  name: "{{ arcgis_log_settings_config_map }}"
                  key: arcgis_log_settings 
        ports:
        - containerPort: 8443
          name: https
        lifecycle:
          preStop:
            exec:
              command:
                - /arcgis/framework/etc/scripts/prestop.sh
        volumeMounts:
        - mountPath: /arcgisusr
          name: arcgisusr
        - mountPath: /arcgistmp
          name: arcgistmp
        - mountPath: /arcgisusr/adminProperties
          name: log-settings
        - mountPath: /arcgis/framework/etc/server-context
          name: server-context-secret-volume
        - mountPath: /arcgis/framework/etc/ssl/server-cert
          name: server-cert
        # Below internally done via java code
        #- mountPath: /arcgis/framework/etc/ssl/jre-cacerts
        #  name: jre-cacerts
        - mountPath: /arcgisusr/env-variables
          name: env-variables
        - name: logshipper-boot-env
          mountPath: /arcgis/framework/etc/logshipper-boot-env
      imagePullSecrets:
      - name: "{{ arcgis_container_image_pull_secret_name }}"
      volumes:
      - name: arcgisusr
        emptyDir: {}
      - name: arcgistmp
        emptyDir: {}
      - name: logshipper-boot-env
        emptyDir: {}
      - name: log-settings
        configMap:
          name: "{{ arcgis_log_settings_config_map }}"
      - name: server-context-secret-volume
        secret:
          secretName: "{{ arcgis_server_context_secret_name }}"
      - name: server-cert
        secret:
          secretName: "{{ arcgis_interpod_cert_pfx_secret_name }}"
      # Below internally done via java code
      #- name: jre-cacerts
      #  secret:
      #    secretName: "{{ arcgis_sitename }}"-jre-cacerts
      - name: env-variables
        secret:
          secretName: "{{ arcgis_env_variables_secret_name }}"
