---
# Deployment - for bringing up manager app pod.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ arcgis_manager_deployment_name }}"
  namespace: "{{ arcgis_namespace }}"
  labels:
    arcgis/app: enterprise-manager
    arcgis/siteName: "{{ arcgis_sitename }}"
    arcgis/instanceName: "{{ arcgis_selector_instance_name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      arcgis/app: enterprise-manager
      arcgis/siteName: "{{ arcgis_sitename }}"
      arcgis/instanceName: "{{ arcgis_selector_instance_name }}"
  template:
    metadata:
      labels:
        arcgis/app: enterprise-manager
        arcgis/siteName: "{{ arcgis_sitename }}"
        arcgis/instanceName: "{{ arcgis_selector_instance_name }}"
        arcgis/restartTimestamp: "000"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    arcgis/app: enterprise-manager
                    arcgis/siteName: "{{ arcgis_sitename }}"
                    arcgis/instanceName: "{{ arcgis_selector_instance_name }}"
                topologyKey: "{{ arcgis_k8s_availability_topology_key }}"
      # User running container also needs to run with arcgis group id
      securityContext:
        supplementalGroups: [{{ arcgis_supplemental_group_id }}]
      automountServiceAccountToken: false
      containers:
      - image: "{{ arcgis_container_image_manager_app }}"
        imagePullPolicy: "{{ arcgis_container_image_pull_policy }}"
        name: main-container
        livenessProbe:
          tcpSocket:
            port: 8443
          initialDelaySeconds: 0
          periodSeconds: {{ liveness_period_seconds }}
          failureThreshold: {{ liveness_failure_threshold_count }}
          timeoutSeconds: 30
        readinessProbe:
          tcpSocket:
            port: 8443
          initialDelaySeconds: 0
          periodSeconds: {{ readiness_period_seconds }}
          failureThreshold: {{ readiness_failure_threshold_count }}
          timeoutSeconds: 30
        resources:
          requests:
            cpu: {{ resource_cpu_min_manager }}
            memory: "{{ resource_memory_min_manager }}"
          limits:
            cpu: {{ resource_cpu_max_manager }}
            memory: "{{ resource_memory_max_manager }}"
        env:
            - name: ELASTICSEARCH_SERVICE_NAME
              valueFrom:
                secretKeyRef:
                  key: ELASTICSEARCH_SERVICE_NAME
                  name: "{{ arcgis_spatiotemporal_index_store_info_secret_name }}"
            - name: ARCGIS_LOG_DIR
              valueFrom:
                configMapKeyRef:
                  name: "{{ arcgis_log_settings_config_map }}"
                  key: arcgis_log_dir
            - name: ARCGIS_LOG_SETTINGS
              valueFrom:
                configMapKeyRef:
                  name: "{{ arcgis_log_settings_config_map }}"
                  key: arcgis_log_settings
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /arcgisusr
          name: arcgisusr
        - mountPath: /arcgisusr/adminProperties
          name: log-settings
        - mountPath: /arcgis/framework/etc/ssl/server-cert
          name: server-cert
      imagePullSecrets:
      - name: "{{ arcgis_container_image_pull_secret_name }}"
      volumes:
      - name: arcgisusr
        emptyDir: {}
      - name: log-settings
        configMap:
         name: "{{ arcgis_log_settings_config_map }}"
      - name: server-cert
        secret:
          secretName: "{{ arcgis_interpod_cert_pfx_secret_name }}"
