---
# Copy files from pod to local storage
# -----------------------------------------------------------------------------
- name: "Copy files from pod to local storage"
  when: masbr_use_local_storage
  block:
    # Local storage job folder
    - name: "Set fact: local storage job folder"
      set_fact:
        masbr_storage_job_folder: >-
          {{ masbr_storage_local_folder }}/{{ masbr_cf_job_type }}s/{{ masbr_cf_job_name }}

    - name: "Debug: local storage job folder"
      debug:
        msg: "Local storage job folder ......... {{ masbr_storage_job_folder }}"

    # Copy files
    - name: "Copy files from pod to local storage"
      shell: >-
        mkdir -p {{ [masbr_storage_job_folder, item.dest_folder] | path_join }} &&
        oc cp --retries=50 -c {{ masbr_cf_container_name }}
        {{ masbr_cf_namespace }}/{{ masbr_cf_pod_name }}:{{ item.src_file }}
        {{ [masbr_storage_job_folder, item.dest_folder, item.src_file|basename] | path_join }}
      loop: "{{ masbr_cf_paths }}"


# Copy files from pod to cloud storage
# -----------------------------------------------------------------------------
- name: "Copy files from pod to cloud storage"
  when: masbr_use_cloud_storage
  block:
    # Cloud storage job folder
    - name: "Set fact: cloud storage job folder"
      set_fact:
        masbr_storage_job_folder: >-
          {{ masbr_storage_cloud_rclone_name }}:{{ masbr_storage_cloud_bucket }}/{{ masbr_cf_job_type }}s/{{ masbr_cf_job_name }}

    - name: "Debug: cloud storage job folder"
      debug:
        msg: "Cloud storage job folder ......... {{ masbr_storage_job_folder }}"

    # Copy files to mounted pvc folder
    - name: "Set fact: job folder in pvc"
      set_fact:
        masbr_cf_pvc_job_folder: >-
          {{ [masbr_cf_pvc_mount_path, 'backup', masbr_cf_job_name] | path_join }}

    - name: "Debug: job folder in pvc"
      debug:
        msg: "Job folder in pvc ......... {{ masbr_cf_pvc_job_folder }}"

    - name: "Copy files to mounted pvc folder"
      shell: >-
        oc exec {{ masbr_cf_pod_name }} -c {{ masbr_cf_container_name }} -n {{ masbr_cf_namespace }} -- bash -c
        'mkdir -p {{ masbr_cf_pvc_job_folder }};
        cp -f {{ item.src_file }} {{ masbr_cf_pvc_job_folder }};
        ls -lA {{ masbr_cf_pvc_job_folder }}'
      loop: "{{ masbr_cf_paths }}"
      register: _pvc_copy_output

    - name: "Debug: list files in mounted pvc folder"
      debug:
        msg: "{{ _pvc_copy_output.results[-1].stdout_lines }}"

    # Copy files from mounted pvc folder to cloud storage
    - name: "Set fact: initial rclone copy file command"
      set_fact:
        masbr_cf_cmds: "rclone version"

    - name: "Set fact: rclone copy file command"
      set_fact:
        masbr_cf_cmds: >-
          {{ masbr_cf_cmds }};
          rclone --links --progress --no-check-certificate --config ${MASBR_STORAGE_CLOUD_RCLONE_FILE}
          --log-file {{ masbr_cf_pvc_job_folder }}/rclone.log --log-level DEBUG copy
          {{ [masbr_cf_pvc_job_folder, item.src_file|basename ] | path_join }}
          {{ [masbr_storage_job_folder, item.dest_folder] | path_join }}
      loop: "{{ masbr_cf_paths }}"

    - name: "Debug: rclone copy file command"
      debug:
        msg: "Rclone copy file command .......... {{ masbr_cf_cmds }}"

    # Create copy file Job:
    # 1. The Job pod will mount the PVC where the files will be copied from
    # 2. Use rclone to copy files from PVC to COS
    - name: "Create copy file Job"
      include_tasks: "{{ role_path }}/../../common_tasks/backup_restore/create_copy_cloud_files_job.yml"

  always:
    # Clean up
    - name: "Delete job folder in mounted pvc"
      shell: >-
        oc exec {{ masbr_cf_pod_name }} -c {{ masbr_cf_container_name }} -n {{ masbr_cf_namespace }} -- bash -c
        'rm -rf {{ masbr_cf_pvc_job_folder }}'

    - name: "Delete copy file Job"
      include_tasks: "{{ role_path }}/../../common_tasks/backup_restore/delete_copy_cloud_files_job.yml"


# Copy files from pod to pvc storage
# -----------------------------------------------------------------------------
