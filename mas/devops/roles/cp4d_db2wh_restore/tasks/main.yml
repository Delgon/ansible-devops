---

# 1. Provide debug information to the user
# -----------------------------------------------------------------------------
- name: "Debug information"
  debug:
    msg:
      - "Namespace ........... {{ cpd_meta_namespace }}"
      - "Db2 database name ... {{ db2wh_dbname }}"


# 2. Determine which pod to run in
# -----------------------------------------------------------------------------
- name: "Lookup db2wh Pod"
  community.kubernetes.k8s_info:
      kind: Pod
      namespace: "{{cpd_meta_namespace}}"
      label_selectors:
      - type = engine
  register: _db2wh_pod

- name: Configure facts
  set_fact:
    db2wh_pod_name: "{{_db2wh_pod.resources[0].metadata.name}}"
    dest_dir: "{{playbook_dir}}/backup/"
    back_up_dir: /mnt/blumeta0/home/db2inst1/db_backup/


# 3. Prepare database for restore
# -----------------------------------------------------------------------------
- name: Prepare db for restore
  community.kubernetes.k8s_exec:
    namespace: "{{cpd_meta_namespace}}"
    pod: "{{db2wh_pod_name}}"
    command: |
      su - db2inst1 &&
      sudo wvcli system disable -m "Disable HA before Db2 maintenance" &&
      db2 connect to {{db2wh_dbname}} &&
      db2 list applications &&
      db2 force application all &&
      db2 terminate &&
      db2 deactivate database {{db2wh_dbname}} &&
      db2stop force &&
      ipclean -a &&
      db2set -null DB2COMM &&
      db2start admin mode restricted access &&
  register: _prepare_cmds_status


# 4. Transfer files to the pod
# -----------------------------------------------------------------------------
- name: "Move backup files to db2wh pod"
  ansible.builtin.shell: |
    oc rsync {{dest_dir}} -n {{cpd_meta_namespace}} {{db2wh_pod_name}}:/tmp/ --no-perms=true
  loop:
    "{{db2wh.restore.backup_files}}"
  loop_control:
    loop_var: file_name


# 5. Perform database restore
# -----------------------------------------------------------------------------
# TODO: this looks like it will only work for a specific backup file, should be generic
# sudo mv {{db2wh_dbname}}.0.db2inst1.DBPART000.20210410163329.00* {{backup_dir/*}} &&
- name: "db2wh: Perform Restore"
  ansible.builtin.shell: |
    oc exec -it {{db2wh_pod_name}} -n {{cpd_meta_namespace}} --  su - db2inst1 bash -c "/db2u/scripts/db_restore_extdb.sh --bkp_tar /tmp/backup.tar.gz --bkp_timestamp {{restore.backup_image_timestamp}}"
