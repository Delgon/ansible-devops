---
# Install the SLS operator catalog

# 1. Create an image pull secret for local artifactory so that we can install the development catalog
- name: "setup/catalog : Create wiotp-docker-local secret"
  when:
    sls_catalog == "development"
  vars:
    artifactoryAuthStr: "{{artifactory_username}}:{{artifactory_apikey}}"
    artifactoryAuth: "{{ artifactoryAuthStr | b64encode }}"
    content:
      - '{"auths":{"wiotp-docker-local.artifactory.swg-devops.com": {"username":"{{artifactory_username}}","password":"{{artifactory_apikey}}","auth":"{{artifactoryAuth}}"}'
      - '}'
      - '}'
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: wiotp-docker-local
        namespace: openshift-marketplace
      stringData:
        # Only way I could get three consecutive "}" into a string :)
        .dockerconfigjson: "{{ content | join('') | string }}"
  register: result

# 2. Patch the default service account in openshift-marketplace so that it is able to pull from Artifactory
- name: "setup/catalog : Patch default SA on openshift-marketplace"
  when:
    sls_catalog == "development"
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: default
        namespace: openshift-marketplace
      imagePullSecrets:
        - name: wiotp-docker-local

# 3. Install the catalog
- name: "setup/catalog : Create SLS catalog"
  vars:
    catalog_template: "{{ (sls_catalog == 'release') | ternary ('templates/catalog.yaml', 'templates/catalog-dev.yaml') }}"
  community.kubernetes.k8s:
    definition: "{{ lookup('template', catalog_template) }}"
    wait: yes
    wait_timeout: 60 #subsequent tasks will fail if the CRD isn't fully created
