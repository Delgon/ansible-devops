---
- name: "Debug information"
  debug:
    msg:
      - "CPD registry ................. {{ cpd_registry }}"
      - "CPD username ................. {{ cpd_registry_user }}"
      - "CPD entitlement .............. *********************"
      - "Namespace .................... {{ cpd_meta_namespace }}"


# 1. Setup namespace for CP4D
# -----------------------------------------------------------------------------
- name: "Create CPD Meta Namespace"
  vars:
    namespace: "{{cpd_meta_namespace}}"
  community.kubernetes.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/namespace.yaml') }}"
  register: _cpd_meta_namespace_result


# 2. Setup entitlement for CP4D
# -----------------------------------------------------------------------------
- name: "Create ibm-entitlement-key secret"
  vars:
    entitledAuthStr: "{{cpd_registry_user}}:{{cpd_registry_password}}"
    entitledAuth: "{{ entitledAuthStr | b64encode }}"
    content:
      - "{\"auths\":{\"{{cpd_registry}}\":{\"username\":\"{{cpd_registry_user}}\",\"password\":\"{{cpd_registry_password}}\",\"auth\":\"{{entitledAuth}}\"}"
      - "}"
      - "}"
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: ibm-entitlement-key
        namespace: "{{ cpd_meta_namespace }}"
      stringData:
        .dockerconfigjson: "{{ content | join('') | string }}"


# 3. Install CP4D operator
# -----------------------------------------------------------------------------
- name: "Install CPD Subscription"
  community.kubernetes.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/subscription.yaml') }}"
  register: _cpd_subscription_result

- name: "Wait for CP4D operator to be ready (60s delay)"
  community.kubernetes.k8s_info:
    api_version: v1
    name: ibm-cp-data-operator
    namespace: "{{cpd_meta_namespace}}"
    kind: Deployment
  register: _cpd_subscription
  until: _cpd_subscription.resources[0].status.availableReplicas is defined
  retries: 10 # Approximately 10 minutes before we give up
  delay: 60 # 1 minute

# 3. Install CP4D Lice CPDService
# -----------------------------------------------------------------------------
- name: "Install Lite CPDService"
  community.kubernetes.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/cpdservice.yml') }}"

- name: "Wait for Lite CPDService to be ready (60s delay)"
  community.kubernetes.k8s_info:
    api_version: metaoperator.cpd.ibm.com/v1
    kind: CPDService
    name: cpdservice-lite
    namespace: "{{ cpd_meta_namespace }}"
  register: _cpd_service
  until:
    - _cpd_service.resources | length > 0
    - _cpd_service.resources[0].status is defined
    - _cpd_service.resources[0].status.code == '0'
    - _cpd_service.resources[0].status.status == 'Ready'
    - _cpd_service.resources[0].status.message == 'Completed'
  retries: 60 # approx 1 hour before we give up
  delay: 60 # 1 minute


- name: "Obtain CP4D dashboard URL"
  community.kubernetes.k8s_info:
    api_version: v1
    name: cpd-meta-ops-cpd
    namespace: "{{cpd_meta_namespace}}"
    kind: Route
  register: _cpd_route

- debug:
    msg:
    - "CP4D Dashboard ................. https://{{_cpd_route.resources[0].spec.host}}"
    - "CP4D Username .................. admin"
    - "CP4D Password .................. password"
