---
- hosts: localhost
  any_errors_fatal: true
  vars:
    sls_catalog_source: "{{ lookup('env', 'SLS_CATALOG_SOURCE') | default('ibm-operator-catalog', true) }}"
    sls_channel: "{{ lookup('env', 'SLS_CHANNEL') | default('3.x', true) }}"
    sls_namespace: "{{ lookup('env', 'SLS_NAMESPACE') | default('ibm-sls', true) }}"
    sls_icr_cp: "{{ lookup('env', 'SLS_ICR_CP') | default('cp.icr.io/cp', true) }}"
    sls_icr_cpopen: "{{ lookup('env', 'SLS_ICR_CPOPEN') | default('icr.io/cpopen', true) }}"
    sls_instance_name: "{{ lookup('env', 'SLS_INSTANCE_NAME') | default('sls', true) }}"
    sls_entitlement_username: "{{ lookup('env', 'SLS_ENTITLEMENT_USERNAME') | default('cp', true) }}"
    sls_entitlement_key: "{{ lookup('env', 'SLS_ENTITLEMENT_KEY') }}"
    sls_storage_class: "{{ lookup('env', 'SLS_STORAGE_CLASS') }}"
    sls_domain: "{{ lookup('env', 'SLS_DOMAIN') }}"

    sls_cfg_file: "{{ mas_config_dir }}/sls.yml"

    # You can either provide a mongocfg file from MAS or provide mongo configuration manually
    mongodb_cfg_file: "{{mas_config_dir}}/mongodb.yml"

    # mongodb:
    #    hosts:
    #      - host:
    #      - port:
    #    username: "{{ lookup('env', 'MONGODB_USERNAME') }}"
    #   password: "{{ lookup('env', 'MONGODB_PASSWORD') }}"

    # Bootstrap is used to initialize SLS, provide if you do have a lic file and licenseId you want to use
    bootstrap:
      license_id: "{{ lookup('env', 'SLS_LICENSE_ID') | default('', true) }}"
      registration_key: "{{ lookup('env', 'SLS_REGISTRATION_KEY') | default('', true) }}"
      entitlement_file: "{{mas_config_dir}}/entitlement.lic"
  roles:
    - mas.devops.sls_install
